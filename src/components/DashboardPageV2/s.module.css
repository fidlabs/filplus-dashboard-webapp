.grid {
  display: grid;
  gap: 16px;
  grid-template-columns: 1fr;
  margin-top: 32px;
}

.grid.double {
  grid-template-columns: repeat(2, 1fr);
}

.card {
  border-radius: 8px;
  background: var(--theme-area-background);
  box-shadow: var(--theme-area-box-shadow);
  padding: 24px;
  margin: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  transition: all 0.3s ease-out;
}

.size1,
.size2,
.size3,
.size4,
.size5,
.size6 {
  grid-column: span 1;
}

.cardTitle {
  font-size: 12px;
  line-height: 16px;
  font-weight: 500;
  color: var(--theme-text-secondary);
  margin: 0 0 24px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.cardTitle.noMargin {
  margin: 0;
}

.chartHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 24px;
}

.chartTabButtonWrapper {
  display: flex;
  gap: 16px;
}

.chartTabButton {
  position: relative;
  border: 0;
  margin: 0;
  padding: 0;
  background: transparent;
  cursor: pointer;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  color: var(--theme-text-secondary);
}

.chartTabButtonActive {
  font-weight: 600;
  color: var(--color-black);
}

.chartTabButtonActive::after {
  content: '';
  display: block;
  position: absolute;
  bottom: -4px;
  left: 50%;
  transform: translateX(-50%);
  height: 2px;
  width: 95%;
  background: var(--color-dodger-blue);
  border-radius: 2px;
}

.chartFilters {
  font-size: 12px;
  line-height: 16px;
  font-weight: 500;
  color: var(--theme-text-secondary);
}

.cardData {
  font-size: 20px;
  line-height: 24px;
  font-weight: 600;
  color: var(--theme-text);
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
  min-height: 40px;
  margin: 0;
  transition: all 0.3s ease-out, opacity 0.6s ease-out;
  opacity: 1;
}

.cardDataHidden {
  max-height: 0;
  padding: 0;
  margin: 0;
  overflow: hidden;
  min-height: 0;
  opacity: 0;
}

.cardButton {
  background-color: transparent;
  border: 0;
  transition: all 0.3s ease-out;
}

.cardButton svg {
  transition: all 0.3s ease-out;
}

.cardLink {
  font-size: 14px;
  line-height: 18px;
  font-weight: 500;
  color: var(--color-black);
  text-decoration: none;
  display: flex;
  align-items: center;
  position: relative;
  overflow: hidden;
  padding-right: 8px;
  padding-left: 4px;
  background: transparent;
  border: 0;
  outline: 0;
}

.cardLink::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0.1em;
  background-color: var(--color-black);
  transition: transform 0.3s cubic-bezier(0, 0.55, 0.45, 1);
  opacity: 1;
  transform: translate3d(-100%, 0, 0);
}

.cardLink:hover::after,
.cardLink:focus::after {
  transform: translate3d(0, 0, 0);
}

.cardLink > svg {
  transform: translateX(2px);
  transition: transform 0.3s cubic-bezier(0, 0.55, 0.45, 1);
}

.cardLink:hover > svg {
  transform: translateX(8px);
}

.cardData span:first-of-type {
  margin-right: 16px;
}

.backLink > svg {
  transform: translateX(-2px);
}

.backLink:hover > svg {
  transform: translateX(-6px);
}

.label {
  font-weight: 500;
  font-size: 12px;
  line-height: 16px;
  padding: 4px 12px;
  border-radius: 6px;
  margin-top: 8px;
  margin-bottom: 8px;
  margin-right: 16px;
  display: inline-flex;
  align-items: center;
}

.label:last-of-type {
  margin-right: 0;
}

.label b {
  display: inline-flex;
  align-items: center;
  margin-right: 4px;
}

.label.primary {
  background: rgba(0, 145, 255, 0.08);
  color: var(--color-dodger-blue);
}

.label.secondary {
  background: rgba(57, 193, 203, 0.08);
  color: var(--color-medium-turquoise);
}


.chartTooltip {
  background: var(--theme-area-background);
  box-shadow: var(--theme-area-box-shadow);
  padding: 24px;
  border-radius: 8px;
}

.flexContainer {
  display: flex;
  justify-content: space-between;
  width: 100%;
  margin-top: -20px;
}

.flexItem {
  padding-right: 40px;
}

.flexTitle {
  font-size: 14px;
  line-height: 16px;
  font-weight: 500;
  color: var(--theme-text-secondary);
  align-items: center;
  display: flex;
}

.sectionTitle {
  grid-column: span 1;
  color: var(--theme-text);
}

.chartWrap {
  overflow: hidden;
  width: 100%;
}

.chartMarginBottom {
  /*margin-bottom: 100px;*/

}

.chartWrap.square {
  aspect-ratio: 1;
}

.chartWrap.wide {
  aspect-ratio: 2;
}

.chartTooltip {
  background: var(--theme-area-background);
  box-shadow: var(--theme-area-box-shadow);
  padding: 24px;
  border-radius: 8px;
}

.chartTooltipTitle {
  font-size: 12px;
  line-height: 16px;
  font-weight: 500;
  color: var(--theme-text-secondary);
}

.chartTooltipData {
  font-size: 16px;
  line-height: 20px;
  font-weight: 500;
  color: var(--theme-text);
}

@media (min-width: 768px) {
  .grid, .grid.double {
    gap: 24px;
    grid-template-columns: repeat(6, 1fr);
  }

  .size1 {
    grid-column: span 1;
  }

  .size2 {
    grid-column: span 2;
  }

  .size3 {
    grid-column: span 3;
  }

  .size4 {
    grid-column: span 4;
  }

  .size5 {
    grid-column: span 5;
  }

  .size6 {
    grid-column: span 6;
  }

  .sectionTitle {
    grid-column: span 6;
  }
}

.toggleSwitch {
  margin-left: auto;
}

.statusCard {
  margin-left: auto;
  margin-bottom: auto;
  height: 10px;
  width: 10px;
  display: block;
  border-radius: 5px;
}

.statusCardInSync {
  background-color: green;
}

.statusCardOutOfSync {
  background-color: red;
}

.treeLabelNode {
  fill: var(--color-medium-turquoise);
  stroke: var(--color-dodger-blue);
  stroke-width: 1;
}

.treeLabelNodeLeaf {
  fill: var(--color-white);
  stroke: var(--color-dodger-blue);
  stroke-width: 1;
}

.treeLabelTitle {
  font-size: 16px;
  line-height: 18px;
  font-weight: 300;
  fill: var(--color-black);
  margin: 0;
  stroke-width: 0.5;
}

.treeLabelTitleHoverable {
  cursor: pointer;
  stroke-width: 0.4;
  fill: var(--color-mountain-meadow);
}

.treeLabelTitleHoverable:hover {
  text-decoration: underline;
}

.treeLabelInfo {
  font-size: 14px;
  line-height: 16px;
  font-weight: 300;
  fill: var(--color-dodger-blue);
  margin: 0;
  stroke-width: 0.3;
}

.treePath {
  stroke: red;
}
